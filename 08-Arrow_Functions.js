/* Arrow Functions
8.1 ทุกครั้งที่ต้องการใช้งาน Function expressions (รวมถึง Anonymous functions) ให้ใช้ Arrow Functions แทน

เพราะค่าของ this ใน Arrow functions จะมีค่าเท่ากับค่า this ของฟังก์ชันที่ห่อหุ้ม Arrow functions อยู่

แต่ถ้าฟังก์ชันยาวมากๆ ให้แยกออกมาเป็น Function declarations แทน

// ไม่ดี
[1, 2, 3].map(function (x) {
  return x * x;
});

// ดี
[1, 2, 3].map((x) => {
  return x * x;
});
8.2 ถ้าฟังก์ชันมีแค่บรรทัดเดียวและมีแค่อาร์กิวเมนต์เดียวให้ลบ {} และ () ออกได้ แต่ในกรณีอื่นๆให้ใช้ {}, () และ return คีย์เวิร์ด

เพราะอ่านง่ายกว่า โดยเฉพาะเวลาที่มีการเรียกใช้เมท็อตแบบต่อเนื่อง (Method chaining)

แต่ถ้าต้องการส่งค่ากลับไปแบบออบเจ็กต์ ก็ให้ใช้ {} และ () ตามปกติ

// ดี
[1, 2, 3].map(x => x * x); // จะสังเกตว่า Arrow functions ที่สั้นๆแบบนี้เมื่อไม่ใส่ {} และ () แล้วทำให้ดูง่ายขึ้น

// ดี
[1, 2, 3].reduce((total, n) => { // Arrow functions ที่ซับซ้อนมากขึ้นควรใส่ {} และ ()
  return total + n;
}, 0);
*/
